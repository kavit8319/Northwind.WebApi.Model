// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Northwind.WebApi.Model.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Northwind.WebApi.Model.Data
{
    public partial interface INorthwindContextProcedures
    {
        Task<List<AddPostCodeResult>> AddPostCodeAsync(string CountryCode, string PostCode, string PlaceName, string AdminName, string AdminName1, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCityByCountryResult>> GetAllCityByCountryAsync(string CountryCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCountrysResult>> GetAllCountrysAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllPostCodesByCountryCodeResult>> GetAllPostCodesByCountryCodeAsync(string CounterCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeExistResult>> GetEmployeeExistAsync(string FirstName, string LastName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeesForReportsToResult>> GetEmployeesForReportsToAsync(int? exceptEmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTitlesResult>> GetTitlesAsync(string TitleType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsRefreshTokenAsync(int? UserId, string Token, DateTime? ExpiryDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LogoneResult>> LogoneAsync(string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> RemoveCategoryByIdAsync(int? CategoryId, bool? remComferm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RemoveEmployeesByIdResult>> RemoveEmployeesByIdAsync(int? EmployeeId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RemoveSupplierByIdResult>> RemoveSupplierByIdAsync(int? SupplierId, bool? remComferm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllPostCodesByCountryCodeResult>> SelectAllPostCodesByCountryCodeAsync(string CounterCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectCategoryPagingResult>> SelectCategoryPagingAsync(string CategoryName, string CategoryDescription, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectCustomerPagingResult>> SelectCustomerPagingAsync(string CompanyName, string ContactName, int? ContactTitleId, string Address, string City, string PostalCode, string Country, string Phone, bool? IsVip, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectEmployeesAllResult>> SelectEmployeesAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectEmployeesPagingResult>> SelectEmployeesPagingAsync(string FirstName, string LastName, string TitleOfCourtesy, int? Title, DateTime? BirthDate, DateTime? HireDate, string Address, string City, string Country, int? ReportsTo, string PostCode, string Note, string FilterType, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectOrdersDetailResult>> SelectOrdersDetailAsync(int? OrderId, string CollName, string AscDesc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectOrdersPagingResult>> SelectOrdersPagingAsync(string CompanyName, string ContactName, string EmployeeFullName, decimal? Freight, string ShipName, string ShipAddress, string ShipCountry, string ShipCity, string ShipPostalCode, double? TotalSumm, DateTime? OrderDate, DateTime? RequiredDate, DateTime? ShippedDate, string FilterType, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectProductPagingResult>> SelectProductPagingAsync(string ProductName, int? SupplierId, int? CategoryId, string QuantityPerUnit, decimal? UnitPrice, short? UnitsInStock, short? UnitsOnOrder, short? ReorderLevel, bool? Discontinued, string ExcludeProductIdStr, string FilterType, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectRefreshTokenByTokenResult>> SelectRefreshTokenByTokenAsync(string Token, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectSuppliersPagingResult>> SelectSuppliersPagingAsync(string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string HomePage, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectUserPagingResult>> SelectUserPagingAsync(string FirstName, string LastName, string Email, int? RoleId, string CollName, string AscDesc, int? PageNum, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserByEmailResult>> UserByEmailAsync(string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UserByIdResult>> UserByIdAsync(int? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UserChengePersonalInfoAsync(int? UserId, string FirstName, string LastName, string Email, string UserPassword, byte[] UserSalt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UserEmailExistAsync(string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
